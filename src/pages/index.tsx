import { type NextPage } from "next";
import Head from "next/head";
import { type Stripe, loadStripe } from "@stripe/stripe-js";
import { useMemo, useState } from "react";
import { api } from "../utils/api";
import { env } from "../env/client.mjs";
import Image from "next/image";
import {
  DocumentChartBarIcon,
  InboxIcon,
  PhotoIcon,
  PuzzlePieceIcon,
} from "@heroicons/react/24/solid";
import { Footer } from "../components/Footer";
import { ReCaptchaProvider, useReCaptcha } from "next-recaptcha-v3";
import { useSubscribe } from "../api/useSubscribe";
import { useRouter } from "next/router";
import { BsTerminal } from "react-icons/bs";

const useStripe = () => {
  const stripe = useMemo<Promise<Stripe | null>>(
    () => loadStripe(env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY),
    []
  );

  return stripe;
};

const Home: NextPage = () => {
  const createCheckout = api.payment.createCheckout.useMutation();
  const stripePromise = useStripe();
  const [email, setEmail] = useState("");
  const [isSubscribed, setIsSubscribed] = useState(false);
  const { isLoading, subscribe } = useSubscribe();
  const { executeRecaptcha } = useReCaptcha();
  const router = useRouter();

  async function checkout() {
    const response = await createCheckout.mutateAsync();
    const stripe = await stripePromise;

    if (stripe !== null) {
      await stripe.redirectToCheckout({
        sessionId: response.id,
      });
    }
  }

  async function handleSubscribe(e: React.FormEvent) {
    e.preventDefault();
    const token = await executeRecaptcha("subscribe");
    try {
      await subscribe({ email, token });
      setEmail("");
      setIsSubscribed(true);
    } catch (err) {
      console.error(err);
    }
  }

  return (
    <>
      <Head>
        <title>Node CLI Course</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex flex-col items-center justify-center">
        <section className="container m-auto grid max-w-screen-lg grid-cols-2 items-center gap-20 pt-24">
          <div className="flex flex-col">
            <h1 className="text-4xl text-white">The Node CLI Mini Course</h1>
            <span className="text-md  mb-6 text-wdc-primary-darker">
              by WebDevCody
            </span>

            <p className="mb-6 text-xl font-normal text-white">
              Buy now to gain access to video content teaching you the basics of
              node, javascript, fetching from an api, reading and writing to
              files, and more by building 4 useful command line tools using
              Node.js.
            </p>

            <button
              className="rounded bg-gradient-to-r from-wdc-primary-darker to-blue-400 px-4 py-3 text-xl text-white hover:to-blue-500"
              disabled={createCheckout.isLoading}
              onClick={() => {
                checkout().catch(console.error);
              }}
            >
              {createCheckout.isLoading ? (
                <svg
                  className="-ml-1 mr-3 inline-block h-5 w-5 animate-spin text-white"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                >
                  <circle
                    className="opacity-25"
                    cx="12"
                    cy="12"
                    r="10"
                    stroke="currentColor"
                    stroke-width="4"
                  ></circle>
                  <path
                    className="opacity-75"
                    fill="currentColor"
                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                  ></path>
                </svg>
              ) : (
                <span>Purchase Now $1.99</span>
              )}
            </button>
          </div>

          <Image
            width="400"
            height="400"
            className="m-auto"
            alt="a picture of a person at a computer"
            src="./programmer.svg"
          />
        </section>
        <section className="w-full pt-24 pb-4">
          <div className="container m-auto grid max-w-screen-lg grid-cols-5 text-center text-white">
            <div>
              <Image
                src="/javascript.png"
                width="100"
                height="100"
                alt="javascript logo"
                className="m-auto invert"
              />
              Learn Javascript <br />
              Fundamentals
            </div>
            <div>
              <Image
                src="/node.png"
                width="100"
                height="100"
                alt="node logo"
                className="m-auto"
              />
              Node 18.x STD Lib
            </div>
            <div>
              <Image
                src="/npm.png"
                width="100"
                height="100"
                alt="npm logo"
                className="m-auto"
              />
              Learn NPM
            </div>
            <div>
              <Image
                src="/vscode.png"
                width="100"
                height="100"
                alt="vscode logo"
                className="m-auto"
              />
              Using VSCode
            </div>
            <div className="flex flex-col items-center justify-center gap-2">
              <div className="text-7xl text-red-500">
                <BsTerminal />
              </div>
              Learn the Terminal
            </div>
          </div>
        </section>
        <svg
          className="m-auto"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 100 1440 220"
        >
          <path
            fill="#2fdeed"
            fillOpacity="1"
            d="M0,288L48,272C96,256,192,224,288,197.3C384,171,480,149,576,165.3C672,181,768,235,864,250.7C960,267,1056,245,1152,250.7C1248,256,1344,288,1392,304L1440,320L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z"
          ></path>
        </svg>
        <section className="w-full bg-wdc-primary-darker pb-16">
          <div className="container m-auto max-w-screen-lg">
            <h2 className="mb-12 text-4xl font-bold">What You Will Build</h2>
            <div className="grid grid-cols-3 gap-12">
              <div className="block max-w-sm rounded-lg border border-gray-200 bg-white p-6 text-center shadow hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
                <DocumentChartBarIcon className="m-auto mb-2 h-12 w-12 text-white" />
                <h5 className="mb-2 text-2xl font-bold tracking-tight text-white">
                  A CSV Parser
                </h5>
                <p className="font-normal text-gray-700 dark:text-gray-400">
                  Learn to read in csv files, parse them manually, extract data,
                  and write json to disk.
                </p>
              </div>
              <div className="block max-w-sm rounded-lg border border-gray-200 bg-white p-6 text-center shadow hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
                <PuzzlePieceIcon className="m-auto mb-2 h-12 w-12 text-white" />
                <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                  Hangman CLI Game
                </h5>
                <p className="font-normal text-gray-700 dark:text-gray-400">
                  Learn to read in user input to play a game of hangman. Learn
                  to read from an API and create a basic game loop.
                </p>
              </div>
              <div className="block max-w-sm rounded-lg border border-gray-200 bg-white p-6 text-center shadow hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
                <InboxIcon className="m-auto mb-2 h-12 w-12 text-white" />
                <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                  Emailer Tool
                </h5>
                <p className="font-normal text-gray-700 dark:text-gray-400">
                  Learn how to read in email templates and send them using
                  nodemailer.
                </p>
              </div>
              <div className="block max-w-sm rounded-lg border border-gray-200 bg-white p-6 text-center shadow hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
                <PhotoIcon className="m-auto mb-2 h-12 w-12 text-white" />
                <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                  Image Scaling Tool
                </h5>
                <p className="font-normal text-gray-700 dark:text-gray-400">
                  Learn how to load in png files and scale them down to various
                  sizes using a third party library called imagemagick.
                </p>
              </div>
              <div className="block max-w-sm rounded-lg border border-gray-200 bg-white p-6 text-center shadow hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
                <PhotoIcon className="m-auto mb-2 h-12 w-12 text-white" />
                <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                  Web Crawler
                </h5>
                <p className="font-normal text-gray-700 dark:text-gray-400">
                  Learn how to load in png files and scale them down to various
                  sizes using a third party library called imagemagick.
                </p>
              </div>
              <div className="block max-w-sm rounded-lg border border-gray-200 bg-white p-6 text-center shadow hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-800 dark:hover:bg-gray-700">
                <PhotoIcon className="m-auto mb-2 h-12 w-12 text-white" />
                <h5 className="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                  Wordle Game
                </h5>
                <p className="font-normal text-gray-700 dark:text-gray-400">
                  Learn how to load in png files and scale them down to various
                  sizes using a third party library called imagemagick.
                </p>
              </div>
            </div>
          </div>
        </section>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 200">
          <path
            fill="#2fdeed"
            fillOpacity="1"
            d="M0,0L1440,160L1440,0L0,0Z"
          ></path>
        </svg>
        <section className="relative w-full text-white">
          <div className="container m-auto flex max-w-screen-lg flex-col gap-8">
            <h2 className="text-4xl font-bold">Why learn from Cody?</h2>
            <p className="text-xl">
              Cody has been working as a professional web developer in the
              industry since 2013. With a total of 10 years of experience, he
              can show you some of the best ways to write code and help you
              focus on the topics that are important. He has over 600 videos
              related to web development on his youtube channel and has a great
              way at teaching topics.
            </p>

            <Image
              width="600"
              height="500"
              alt="a review"
              className="self-center"
              src="/review-1.png"
            ></Image>
            <div className="flex gap-4">
              <Image
                width="600"
                height="500"
                alt="a review"
                src="/review-2.png"
                className="self-end"
              ></Image>
              <Image
                width="600"
                height="500"
                alt="a review"
                className="self-center"
                src="/review-3.png"
              ></Image>
            </div>
            <div className="flex gap-4">
              <Image
                width="600"
                height="500"
                alt="a review"
                src="/review-4.png"
              ></Image>
              <Image
                width="600"
                height="500"
                alt="a review"
                src="/review-5.png"
                className="self-end"
              ></Image>
            </div>
            <Image
              width="600"
              height="500"
              alt="a review"
              className="self-center"
              src="/review-6.png"
            ></Image>
          </div>

          <div className="relative top-24 m-auto flex w-3/5 flex-col gap-8 rounded bg-wdc-gray p-12 text-gray-100 shadow-lg">
            <h3 className="text-center text-4xl">Subscribe to my Newsletter</h3>
            <p className="m-auto w-2/3 text-gray-300">
              Curious to get updates when I release new courses or tips related
              to web development? Subscribe to my free newsletter below.
            </p>

            {isSubscribed ? (
              <div className="text-center">Thanks for subscribing!</div>
            ) : (
              <form
                onSubmit={(e) => {
                  handleSubscribe(e).catch(console.error);
                }}
                className="flex gap-8 px-12"
              >
                <input
                  value={email}
                  name="email"
                  type="email"
                  required
                  onChange={(e) => setEmail(e.currentTarget.value)}
                  className="grow rounded p-2 text-black"
                  placeholder="your-email@example.com"
                ></input>
                <button className="text-md w-60 rounded bg-gradient-to-r from-wdc-primary-darker to-blue-400 px-4 py-2 text-white hover:to-blue-500">
                  Subscribe
                </button>
              </form>
            )}
          </div>
        </section>

        <div className="w-full bg-wdc-darker-blue py-12 pt-40">
          <Footer />
        </div>
      </main>
    </>
  );
};

const RecaptchWrapper: NextPage = () => {
  return (
    <ReCaptchaProvider>
      <Home />
    </ReCaptchaProvider>
  );
};

export default RecaptchWrapper;
